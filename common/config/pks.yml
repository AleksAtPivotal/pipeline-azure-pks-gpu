product-name: pivotal-container-service
product-properties:
  .pivotal-container-service.pks_tls:
    value:
      cert_pem: ((pks-api-cert.certificate))
      private_key_pem: ((pks-api-cert.private_key))
  .properties.cloud_provider:
    selected_option: azure
    value: Azure
  .properties.cloud_provider.azure.azure_cloud_name:
    value: AzurePublicCloud
  .properties.cloud_provider.azure.azure_master_managed_identity:
    value: pks-master
  .properties.cloud_provider.azure.azure_worker_managed_identity:
    value: pks-worker
  .properties.cloud_provider.azure.default_security_group:
    value: ((pks-api-security-group))
  .properties.cloud_provider.azure.location:
    value: ((pks-opsman-location))
  .properties.cloud_provider.azure.primary_availability_set:
    value: ((pks-vm-availability-set))
  .properties.cloud_provider.azure.resource_group_name:
    value: ((pks-resource-group))
  .properties.cloud_provider.azure.subscription_id:
    value: ((azure-subscription-id))
  .properties.cloud_provider.azure.tenant_id:
    value: ((azure-tenant-id))
  .properties.cloud_provider.azure.vnet_name:
    value: ((pks-opsman-vnet))
  .properties.cloud_provider.azure.vnet_resource_group_name:
    value: ((pks-network-resource-group))
  .properties.log_sink_resources_deploy:
    value: true
  .properties.metric_sink_resources_deploy:
    value: true
  .properties.network_selector:
    selected_option: flannel
    value: flannel
  .properties.network_selector.flannel.pod_network_cidr:
    value: 10.200.0.0/16
  .properties.network_selector.flannel.service_cluster_cidr:
    value: 10.100.200.0/24
  .properties.pks-vrli:
    selected_option: disabled
    value: disabled
  .properties.pks-vrops:
    selected_option: disabled
    value: disabled
  .properties.pks_api_hostname:
    value: ((pks-api-hostname))
  .properties.plan1_selector:
    selected_option: active
    value: Plan Active
  .properties.plan1_selector.active.allow_privileged_containers:
    value: false
  .properties.plan1_selector.active.description:
    value: 'Example: This plan will configure a lightweight kubernetes cluster. Not
      recommended for production workloads.'
  .properties.plan1_selector.active.master_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan1_selector.active.master_instances:
    value: 1
  .properties.plan1_selector.active.max_worker_instances:
    value: 50
  .properties.plan1_selector.active.name:
    value: small
  .properties.plan1_selector.active.worker_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan1_selector.active.worker_instances:
    value: 3
  .properties.plan2_selector:
    selected_option: active
    value: Plan Active
  .properties.plan2_selector.active.allow_privileged_containers:
    value: false
  .properties.plan2_selector.active.description:
    value: 'Example: This plan will configure a medium sized kubernetes cluster, suitable
      for more pods.'
  .properties.plan2_selector.active.master_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan2_selector.active.master_instances:
    value: 3
  .properties.plan2_selector.active.max_worker_instances:
    value: 50
  .properties.plan2_selector.active.name:
    value: medium
  .properties.plan2_selector.active.worker_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan2_selector.active.worker_instances:
    value: 5
  .properties.plan3_selector:
    selected_option: active
    value: Plan Active
  .properties.plan3_selector.active.allow_privileged_containers:
    value: false
  .properties.plan3_selector.active.description:
    value: 'Example: This plan will configure a large kubernetes cluster for resource
      heavy workloads, or a high number of workloads.'
  .properties.plan3_selector.active.master_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan3_selector.active.master_instances:
    value: 1
  .properties.plan3_selector.active.master_persistent_disk_type:
    value: "30720"
  .properties.plan3_selector.active.max_worker_instances:
    value: 50
  .properties.plan3_selector.active.name:
    value: medium-workers
  .properties.plan3_selector.active.worker_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan3_selector.active.worker_instances:
    value: 5
  .properties.plan3_selector.active.worker_vm_type:
    value: Standard_F4s
  .properties.plan4_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan5_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan6_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan7_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan8_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan9_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan10_selector:
    selected_option: active
    value: Plan Active
  .properties.plan10_selector.active.addons_spec:
    value: "# Copyright 2017 Google Inc. All rights reserved.\r\n#\r\n# Licensed under
      the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this
      file except in compliance with the License.\r\n# You may obtain a copy of the
      License at\r\n#\r\n#     http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n#
      Unless required by applicable law or agreed to in writing, software\r\n# distributed
      under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES
      OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for
      the specific language governing permissions and\r\n# limitations under the License.\r\n---\r\napiVersion:
      apps/v1\r\nkind: DaemonSet\r\nmetadata:\r\n  name: nvidia-driver-installer\r\n
      \ namespace: kube-system\r\n  labels:\r\n    k8s-app: nvidia-driver-installer\r\nspec:\r\n
      \ selector:\r\n    matchLabels:\r\n      k8s-app: nvidia-driver-installer\r\n
      \ updateStrategy:\r\n    type: RollingUpdate\r\n  template:\r\n    metadata:\r\n
      \     labels:\r\n        name: nvidia-driver-installer\r\n        k8s-app: nvidia-driver-installer\r\n
      \   spec:\r\n      volumes:\r\n      - name: dev\r\n        hostPath:\r\n          path:
      /dev\r\n      - name: nvidia-install-dir-host\r\n        hostPath:\r\n          path:
      /var/vcap/packages/kubernetes-nvidia\r\n      - name: root-mount\r\n        hostPath:\r\n
      \         path: /\r\n      - name: modules\r\n        hostPath:\r\n          path:
      /lib/modules/\r\n      initContainers:\r\n      - name: modprobe\r\n        image:
      nvidia/driver:418.40.04-ubuntu16.04\r\n        command: [\"/sbin/modprobe\"]
      \r\n        args: [\"ipmi_msghandler\"]\r\n        securityContext:\r\n          privileged:
      true\r\n        volumeMounts:\r\n        - name: modules\r\n          mountPath:
      /lib/modules/\r\n      - image: gcr.io/google-containers/ubuntu-nvidia-driver-installer@sha256:86990c870fdc3e710393f8c992337715254012707d46e2f03233d2e10977c232\r\n
      \       name: nvidia-driver-installer\r\n        resources:\r\n          requests:\r\n
      \           cpu: 0.15\r\n        securityContext:\r\n          privileged: true\r\n
      \       env:\r\n          - name: NVIDIA_INSTALL_DIR_HOST\r\n            value:
      /var/vcap/packages/kubernetes-nvidia\r\n          - name: NVIDIA_INSTALL_DIR_CONTAINER\r\n
      \           value: /usr/local/nvidia\r\n          - name: ROOT_MOUNT_DIR\r\n
      \           value: /root\r\n          - name: NVIDIA_DRIVER_VERSION\r\n            value:
      \"418.67\"\r\n        volumeMounts:\r\n        - name: nvidia-install-dir-host\r\n
      \         mountPath: /usr/local/nvidia\r\n        - name: dev\r\n          mountPath:
      /dev\r\n        - name: root-mount\r\n          mountPath: /root\r\n      containers:\r\n
      \     - image: \"gcr.io/google-containers/pause:2.0\"\r\n        name: pause\r\n---\r\napiVersion:
      extensions/v1beta1\r\nkind: DaemonSet\r\nmetadata:\r\n  name: nvidia-gpu-device-plugin\r\n
      \ namespace: kube-system\r\n  labels:\r\n    k8s-app: nvidia-gpu-device-plugin\r\nspec:\r\n
      \ template:\r\n    metadata:\r\n      labels:\r\n        k8s-app: nvidia-gpu-device-plugin\r\n
      \     annotations:\r\n        scheduler.alpha.kubernetes.io/critical-pod: ''\r\n
      \   spec:\r\n      priorityClassName: system-node-critical\r\n      volumes:\r\n
      \     - name: device-plugin\r\n        hostPath:\r\n          path: /var/lib/kubelet/device-plugins\r\n
      \     - name: dev\r\n        hostPath:\r\n          path: /dev\r\n      containers:\r\n
      \     - image: \"k8s.gcr.io/nvidia-gpu-device-plugin@sha256:08509a36233c5096bb273a492251a9a5ca28558ab36d74007ca2a9d3f0b61e1d\"\r\n
      \       command: [\"/usr/bin/nvidia-gpu-device-plugin\", \"-logtostderr\", \"-host-path=/var/vcap/packages/kubernetes-nvidia\"]\r\n
      \       name: nvidia-gpu-device-plugin\r\n        resources:\r\n          requests:\r\n
      \           cpu: 50m\r\n            memory: 10Mi\r\n          limits:\r\n            cpu:
      50m\r\n            memory: 10Mi\r\n        securityContext:\r\n          privileged:
      true\r\n        volumeMounts:\r\n        - name: device-plugin\r\n          mountPath:
      /device-plugin\r\n        - name: dev\r\n          mountPath: /dev\r\n  updateStrategy:\r\n
      \   type: RollingUpdate"
  .properties.plan10_selector.active.allow_privileged_containers:
    value: true
  .properties.plan10_selector.active.description:
    value: GPU workload test plan
  .properties.plan10_selector.active.master_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan10_selector.active.master_instances:
    value: 1
  .properties.plan10_selector.active.master_persistent_disk_type:
    value: "30720"
  .properties.plan10_selector.active.max_worker_instances:
    value: 50
  .properties.plan10_selector.active.name:
    value: gpu
  .properties.plan10_selector.active.worker_az_placement:
    value:
    - zone-1
    - zone-2
    - zone-3
  .properties.plan10_selector.active.worker_instances:
    value: 1
  .properties.plan10_selector.active.worker_vm_type:
    value: Standard_NC6s_v2
  .properties.proxy_selector:
    selected_option: disabled
    value: Disabled
  .properties.syslog_selector:
    selected_option: disabled
    value: disabled
  .properties.telemetry_selector:
    selected_option: disabled
    value: disabled
  .properties.uaa:
    selected_option: internal
    value: internal
  .properties.uaa_oidc:
    value: false
  .properties.uaa_pks_cli_access_token_lifetime:
    value: 600
  .properties.uaa_pks_cli_refresh_token_lifetime:
    value: 21600
  .properties.wavefront:
    selected_option: disabled
    value: disabled
  .properties.worker_max_in_flight:
    value: 1
network-properties:
  network:
    name: management
  other_availability_zones:
  - name: zone-1
  - name: zone-2
  - name: zone-3
  service_network:
    name: ((pks-api-service-network))
  singleton_availability_zone:
    name: zone-1
resource-config:
  pivotal-container-service:
    instances: automatic
    persistent_disk:
      size_mb: automatic
    instance_type:
      id: automatic
    internet_connected: false
    elb_names:
    - ((pks-api-lb-name))
errand-config:
  delete-all-clusters:
    pre-delete-state: true
  pks-nsx-t-precheck:
    post-deploy-state: false
  smoke-tests:
    post-deploy-state: false
  upgrade-all-service-instances:
    post-deploy-state: true
  wavefront-alert-creation:
    post-deploy-state: false
  wavefront-alert-deletion:
    pre-delete-state: false

